<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Menu_.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>